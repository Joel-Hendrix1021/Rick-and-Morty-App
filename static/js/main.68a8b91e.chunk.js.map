{"version":3,"sources":["components/form/FormCharacter.js","components/header/Header.js","hooks/useFavorite.js","components/cardCharacter/CardCharacter.js","components/listCharacteres/ListCharacters.js","hooks/useFetch.js","components/loadingSpiner/Loading.js","components/character/Character.js","hooks/useNearScreen.js","pages/home/Home.js","pages/searchPerson/SearchPerson.js","components/cardCharacter/SkeletonSingle.js","pages/profile/Profile.js","service.js","pages/favorites/Favs.js","App.js","reportWebVitals.js","index.js"],"names":["FormCharacter","useState","formData","setFormData","history","useHistory","className","onSubmit","e","preventDefault","push","name","type","onChange","target","value","src","alt","Header","to","useFavorite","getLocal","window","localStorage","getItem","split","map","item","Number","likes","setLikes","setItem","handleFavs","id","includes","filter","x","like","CardCharacter","character","image","onClick","ListCharacters","characters","console","log","length","useFetch","url","setCharacters","isLoading","setIsLoading","useEffect","getCharacters","then","finally","a","fetch","res","json","data","Loading","Character","page","setPage","element","useRef","entries","setEntries","observer","IntersectionObserver","rootMargin","current","observe","unobserve","useNearScreen","charactersResult","setCharactersResult","auxArr","isIntersecting","results","ref","Home","SearchPerson","keyword","useParams","SkeletonSingle","props","width","height","viewBox","backgroundColor","foregroundColor","y","rx","ry","Profile","gender","species","status","location","Favs","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68a8b91e.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./form.css\";\r\n\r\nconst FormCharacter = () => {\r\n    const [formData, setFormData] = useState();\r\n\r\n    const history = useHistory();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        history.push(`/search/${formData}`);\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n            <input name=\"name\" type=\"text\"onChange={(e) => setFormData(e.target.value)} />\r\n            <button><img src=\"/assets/loupe.svg\" alt=\"\" /></button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FormCharacter;\r\n","import { Link } from \"react-router-dom\";\r\nimport FormCharacter from \"../form/FormCharacter\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <Link to={\"/\"} className=\"header__title\">Rick and Morty App </Link>\r\n            <FormCharacter />\r\n            <Link className=\"header__fav\" to={\"/favs\"}>\r\n        Favorite <img src=\"/assets/favWhite.svg\" alt=\"favorito\" />\r\n            </Link>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\n\r\nconst useFavorite = () => {\r\n    const getLocal = window.localStorage.getItem(\"likes\");\r\n\r\n    const [likes, setLikes] = useState(getLocal ? getLocal.split(\",\").map((item) => Number(item)) : []);\r\n\r\n    const handleFavs = (id) => {\r\n        if (likes.includes(id)) {\r\n            setLikes((likes) => likes.filter((x) => x !== id));\r\n        } else {\r\n            setLikes((like) => [...like, id]);\r\n        }\r\n    };\r\n\r\n    window.localStorage.setItem(\"likes\", likes);\r\n\r\n    return { likes, handleFavs };\r\n};\r\n\r\nexport default useFavorite;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Link } from \"react-router-dom\";\r\nimport useFavorite from \"../../hooks/useFavorite\";\r\n\r\nconst CardCharacter = ({ character }) => {\r\n    const { likes, handleFavs } = useFavorite();\r\n\r\n    return (\r\n        <div className=\"container__img\" key={character.id}>\r\n            <Link to={`/profile/${character.id}`}>\r\n                <img\r\n                    className=\"img\"\r\n                    src={character.image}\r\n                    alt={character.image}\r\n                />\r\n            </Link>\r\n            <div>\r\n                <p>{character.name}</p>\r\n                <button\r\n                    onClick={() => handleFavs(character.id)}\r\n                    className=\"btn__fav\"\r\n                >\r\n                    {likes.includes(character.id)\r\n                        ? (\r\n                            <img src=\"/assets/favWhite.svg\" alt=\"favorto.svg\" />\r\n                        )\r\n                        : (\r\n                            <img src=\"/assets/fav.svg\" alt=\"favorto.svg\" />\r\n                        )}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardCharacter;\r\n","import CharacterSingle from \"../cardCharacter/CardCharacter\";\r\n// import CharacterSingle from \"../singelCharacter/CharacterSingle\";\r\n\r\nimport \"./listCharacters.css\";\r\n\r\nconst ListCharacters = ({ characters }) => {\r\n    console.log(characters);\r\n    return (\r\n        <>\r\n            { characters.length > 1 &&\r\n        characters.map((character) => <CharacterSingle key={character.id} character={character}/>)\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListCharacters;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [characters, setCharacters] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        getCharacters()\r\n            .then(character => setCharacters(character))\r\n            .finally(isLoading => setIsLoading(false));\r\n    }, [url]);\r\n\r\n    const getCharacters = async () => {\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n        return data;\r\n    };\r\n\r\n    return { characters, setCharacters, isLoading };\r\n};\r\n\r\nexport default useFetch;\r\n","import \"./loading.css\";\r\nconst Loading = () => <div className=\"lds-dual-ring spiner\"></div>;\r\n\r\nexport default Loading;\r\n","import ListCharacters from \"../listCharacteres/ListCharacters\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport \"./character.css\";\r\nimport Loading from \"../loadingSpiner/Loading\";\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport useNearScreen from \"../../hooks/useNearScreen\";\r\n\r\nconst URL = \"https://rickandmortyapi.com/api/character?page=\";\r\n\r\nconst Character = ({ handleFavs, likes }) => {\r\n    const [page, setPage] = useState(1);\r\n    const element = useRef(null);\r\n    const { characters, isLoading } = useFetch(`${URL}${page}`);\r\n    const { entries } = useNearScreen(element);\r\n    const [charactersResult, setCharactersResult] = useState([]);\r\n    const auxArr = [];\r\n\r\n    useEffect(() => {\r\n        if (entries.isIntersecting) {\r\n            setPage(page + 1);\r\n        }\r\n    }, [entries.isIntersecting]);\r\n\r\n    useEffect(() => {\r\n        if (characters.results) {\r\n            characters.results.map(item => auxArr.push(item));\r\n            setCharactersResult([...charactersResult, ...auxArr]);\r\n        }\r\n    }, [characters]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !charactersResult.length > 0\r\n                    ? (<div className=\"container-loading\">\r\n                        <Loading />\r\n                    </div>)\r\n                    : (<div className=\"container\">\r\n                        <ListCharacters likes={likes} characters={charactersResult} handleFavs={handleFavs}/>\r\n                    </div>)\r\n            }\r\n            {\r\n                isLoading && <Loading />\r\n            }\r\n            <div ref={element}></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Character;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useNearScreen (target = null) {\r\n    console.log(target);\r\n    const [entries, setEntries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            (entries) => setEntries(entries[0]),\r\n            { rootMargin: \"10px\" }\r\n        );\r\n        if (target.current) {\r\n            observer.observe(target.current);\r\n        }\r\n\r\n        return () => {\r\n            if (target.current) {\r\n                observer.unobserve(target.current);\r\n            }\r\n        };\r\n    }, [target ? target.current : null]);\r\n    return { entries };\r\n}\r\n","\r\nimport Character from \"../../components/character/Character\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Character />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { useParams } from \"react-router\";\r\nimport ListCharacters from \"../../components/listCharacteres/ListCharacters\";\r\nimport Loading from \"../../components/loadingSpiner/Loading\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\n\r\nconst URL = \"https://rickandmortyapi.com/api/character/?name=\";\r\nconst SearchPerson = () => {\r\n    const { keyword } = useParams();\r\n    const { characters, isLoading } = useFetch(`${URL}${keyword}`);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading\r\n                    ? <Loading/>\r\n                    : <div className=\"container\">\r\n                        {characters.results && <ListCharacters characters={characters.results}/>}\r\n                    </div>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchPerson;\r\n","import ContentLoader from \"react-content-loader\";\r\n\r\nconst SkeletonSingle = props => (\r\n    <ContentLoader\r\n        width={600}\r\n        height={300}\r\n        viewBox=\"0 0 700 300\"\r\n        backgroundColor=\"#3C3E44\"\r\n        foregroundColor=\"#202329\"\r\n        {...props}\r\n    >\r\n        <rect x=\"4\" y=\"8\" rx=\"3\" ry=\"3\" width=\"7\" height=\"288\" />\r\n        <rect x=\"6\" y=\"289\" rx=\"3\" ry=\"3\" width=\"669\" height=\"8\" />\r\n        <rect x=\"670\" y=\"9\" rx=\"3\" ry=\"3\" width=\"6\" height=\"285\" />\r\n        <rect x=\"55\" y=\"42\" rx=\"16\" ry=\"16\" width=\"274\" height=\"216\" />\r\n        <rect x=\"412\" y=\"113\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\r\n        <rect x=\"402\" y=\"91\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n        <rect x=\"405\" y=\"139\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n        <rect x=\"416\" y=\"162\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\r\n        <rect x=\"405\" y=\"189\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n        <rect x=\"5\" y=\"8\" rx=\"3\" ry=\"3\" width=\"669\" height=\"7\" />\r\n        <rect x=\"406\" y=\"223\" rx=\"14\" ry=\"14\" width=\"72\" height=\"32\" />\r\n        <rect x=\"505\" y=\"224\" rx=\"14\" ry=\"14\" width=\"72\" height=\"32\" />\r\n        <rect x=\"376\" y=\"41\" rx=\"3\" ry=\"3\" width=\"231\" height=\"29\" />\r\n    </ContentLoader>\r\n);\r\n\r\nexport default SkeletonSingle;\r\n","import { useParams } from \"react-router-dom\";\r\nimport SkeletonSingle from \"../../components/cardCharacter/SkeletonSingle\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { URL } from \"../../service\";\r\nimport \"./profile.css\";\r\n// https://rickandmortyapi.com/api/character/?name=rick\r\n\r\nconst Profile = () => {\r\n    const { id } = useParams();\r\n\r\n    const { characters, isLoading } = useFetch(`${URL}/${id}`);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading\r\n                    ? <SkeletonSingle/>\r\n                    : (\r\n                        <div className=\"container__profile\" key={id}>\r\n                            <img src={characters.image} alt=\"\" />\r\n                            <div className=\"profile__description\">\r\n                                <p className=\"profile__name\">{characters.name}</p>\r\n                                <p>{characters.gender}</p>\r\n                                <div className=\"profile__status\">\r\n                                    <p>{characters.species}</p>\r\n                                    <p>-</p>\r\n                                    {characters.status && <p>{characters.status}</p>}\r\n                                </div>\r\n                                <p className=\"profile__location\">Last known location:</p>\r\n                                {characters.location && <p>{characters.location.name}</p>}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","export const URL = \"https://rickandmortyapi.com/api/character\";\r\n","import ListCharacters from \"../../components/listCharacteres/ListCharacters\";\r\nimport Loading from \"../../components/loadingSpiner/Loading\";\r\nimport useFavorite from \"../../hooks/useFavorite\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport \"./favs.css\";\r\nconst URL = \"https://rickandmortyapi.com/api/character/\";\r\n\r\nconst Favs = () => {\r\n    const { likes, handleFavs } = useFavorite();\r\n    const { characters, isLoading } = useFetch(`${URL}${likes}`);\r\n\r\n    console.log(isLoading);\r\n    return (\r\n        <>\r\n            {\r\n                isLoading\r\n                    ? <Loading/>\r\n                    : (\r\n                        <div className=\"container favs\">\r\n                            <ListCharacters characters={characters} likes={likes} handleFavs={handleFavs}/>\r\n                        </div>\r\n                    )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Favs;\r\n","import \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/header/Header\";\nimport Home from \"./pages/home/Home\";\nimport SearchPerson from \"./pages/searchPerson/SearchPerson\";\nimport Profile from \"./pages/profile/Profile\";\nimport Favs from \"./pages/favorites/Favs\";\n\nfunction App () {\n    return (\n        <div className=\"App\">\n            <BrowserRouter basename=\"/Rick-and-Morty-App\">\n                <Header/>\n                <Switch>\n                    <Route path=\"/profile/:id\">\n                        <Profile />\n                    </Route>\n                    <Route path=\"/search/:keyword\">\n                        <SearchPerson />\n                    </Route>\n                    <Route exact path=\"/favs\">\n                        <Favs />\n                    </Route>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}